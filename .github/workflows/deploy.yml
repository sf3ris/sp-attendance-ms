name: Deploy to Digital Ocean 

on:
  release:
    types: [ created ]

defaults:
  run:
    shell: bash

jobs:
  deploy:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Pre-script
        run: |
          apt-get update -qq -y
          apt-get install -y -qq sshpass
      - uses: actions/checkout@v2
      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '3.x'
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64'
      # You can test your matrix by printing the current Python version
      - name: Build project
        run: pip install --no-cache-dir -r requirements.txt
      - name: Setup Environment
        run: |
          mv app/.env.example app/.env
          sed -i "s/:AUTH_SERVICE_HOST/${{ secrets.AUTH_HOST}}/g" app/.env
          sed -i "s/:HOST/172.21.0.2/g" app/.env
          sed -i "s/:USER/root/g" app/.env
          sed -i "s/:PASSWORD/${{ secrets.DB_PASS}}/g" app/.env
      - name: Deploy
        run: |
          - export SSHPASS=${{ secrets.SSH_PASSWORD }}
          - GLOBIGNORE="image" sshpass -e scp -o stricthostkeychecking=no -r $(pwd) ${{ secrets.SSH_USERNAME }}@159.65.125.31:/usr/src/attendance_microservice/
          - sshpass -e ssh ${{ secrets.SSH_USERNAME }}@159.65.125.31 'cd /usr/src/attendance_microservice; docker-compose down; cd /usr/src/; rm -rf attendance_microservice.old 2> /dev/null; mv attendance_microservice attendance_microservice.old && mv attendance_microservice/attendance_microservice attendance_microservice; cd attendance_microservice; docker-compose up -d --build --force-recreate;'
